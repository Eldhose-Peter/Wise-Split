// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int                  @id @default(autoincrement())
  email     String               @unique
  firstName String
  lastName  String
  bio       String?
  imageUrl  String?
  groups    GroupMember[]
  expenses  ExpenseParticipant[]
  Expense   Expense[]
}

model Group {
  id        Int           @id @default(autoincrement())
  title     String
  members   GroupMember[]
  expenses  Expense[]
  createdAt DateTime      @default(now())
}

model GroupMember {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int
}

model Expense {
  id           Int                  @id @default(autoincrement())
  group        Group                @relation(fields: [groupId], references: [id])
  groupId      Int
  description  String
  amount       Float
  currency     String
  paidBy       User                 @relation(fields: [paidById], references: [id])
  paidById     Int
  settled      Boolean              @default(false)
  createdAt    DateTime             @default(now())
  participants ExpenseParticipant[]
}

model ExpenseParticipant {
  id         Int     @id @default(autoincrement())
  expense    Expense @relation(fields: [expenseId], references: [id])
  expenseId  Int
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
  amountOwed Float
  currency   String
}
